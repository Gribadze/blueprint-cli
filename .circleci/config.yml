version: 2

defaults: &defaults
    working_directory: ~/repo
    docker:
        - image: circleci/node:8

jobs:
    test:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-
            - run:
                name: Install dependencies
                command: npm install
            - run:
                name: Run tests
                command: npm test

            - save_cache:
                paths:
                    - node_modules
                key: v1-dependencies-{{ checksum "package.json" }}
            - persist_to_workspace:
                root: ~/repo
                paths: .
    build:
        <<: *defaults
        steps:
            - attach_workspace:
                at: ~/repo
            - run:
                name: Building sources
                command: npm run build
            - persist_to_workspace:
                  root: ~/repo
                  paths: .
    deploy:
        <<: *defaults
        steps:
            - attach_workspace:
                at: ~/repo
            - add_ssh_keys:
                  fingerprints:
                      - "24:5d:0b:71:7e:73:21:93:52:80:52:dc:c5:9c:81:4c"
            - run:
                name: Authenticate with registry
                command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
            - run: git config user.name $CIRCLE_USERNAME
            - run: git add . && git commit -am "circleci git diff ???? [ci skip]"
            - run:
                name: Increment version
                command: |
                    npm version patch -m "Version patched to %s [ci skip]"
                    git push origin master
                    git push --tags
            - run:
                name: Publish package
                command: npm publish

workflows:
    version: 2
    test-build-deploy:
        jobs:
            - test
            - build:
                requires:
                    - test
            - deploy:
                filters:
                    branches:
                        only:
                            - master
                requires:
                    - test
                    - build
